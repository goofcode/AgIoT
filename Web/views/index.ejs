<!DOCTYPE html>
<html>
<head>
    <title> AgIoT </title>
    <link rel='stylesheet' href='/stylesheets/style.css'/>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
</head>
<body>
<header>
    <h1><img src="/images/atoi_logo.png"></h1>
</header>
<div>
    <table align="center">
        <% for(var i = 0; i < num_row; i++) { %>
        <tr>
            <% for (var j = 0; j < num_col; j++) { %>
            <% var number = i * num_col + j; %>

            <td>
                <canvas id="cell-<%= number %>" width="16px" height="16px"></canvas>
            </td>

            <% } %>
        </tr>
        <% } %>
    </table>
</div>

<script>
    const n = <%= num_row %>;

    const imageSize = 160;

    const cellSize = imageSize / n;

    function drawCell(data, number) {
        const buffer = new ArrayBuffer(cellSize * cellSize);

        const bytes = new Uint8Array(buffer);

        for (let i = 0; i < cellSize * cellSize; i++) {
            bytes[i] = parseInt(data.substring(2*i, 2*i + 2), 16);
        }

        const c = document.getElementById("cell-" + number);
        const ctx = c.getContext("2d");

        for (let i = 0; i < cellSize; i++) {
            for (let j = 0; j < cellSize; j++) {
                const g = bytes[i * cellSize + j]

                console.log(g)

                ctx.fillStyle = "rgba(" + g + "," + g + "," + g + ", 1)";
                ctx.fillRect(i, j, 1, 1);
            }
        }
    }

    setInterval(function () {
        $.get("/api/updatedCells", function (data) {
            if (data.length === 0) {
                return;
            }

            // $("#cell-" + data[0].number).css("background-image",
            //     `url("${data[0].image}")`)

            drawCell(data[0].image, data[0].number)

            $.post("/api/updatedCells/pop", function (data) {
                console.log(data);
            });
        });
    }, 100)
</script>
</body>
</html>
